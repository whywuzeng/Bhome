apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    dexOptions {
        dexInProcess true
        preDexLibraries false
        javaMaxHeapSize "2g"//越大越好
        jumboMode = true
        threadCount = 8
    }

    signingConfigs {
        debug {
            storeFile file('bhouse.jks')
            storePassword "wuzeng"
            keyAlias "bhouse"
            keyPassword "wuzeng"
        }
        //签名打包
        release {
            storeFile file('bhouse.jks')
            storePassword "wuzeng"
            keyAlias "bhouse"
            keyPassword "wuzeng"
        }
    }

    flavorDimensions "channel"
    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 19
        }
        rele {
            // The actual minSdkVersion for the application.
            minSdkVersion rootProject.ext.android["minSdkVersion"]
        }
    }

        defaultConfig {
            applicationId "com.system.bhouse.bhouse"
            minSdkVersion rootProject.ext.android["minSdkVersion"]
            targetSdkVersion rootProject.ext.android["targetSdkVersion"]
            versionCode rootProject.ext.android["versionCode"]
            versionName rootProject.ext.android["versionName"]
            multiDexEnabled true
            javaCompileOptions {
                annotationProcessorOptions {
                    includeCompileClasspath = true
                }
            }
            ndk {
                //根据需要 自行选择添加的对应cpu类型的.so库。
                abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a','x86'
                // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
            }
            manifestPlaceholders = [

                    XG_ACCESS_ID : "2100294605",
                    XG_ACCESS_KEY: "A47RF3E3Z3MI",
            ]
        }

//    greendao {
//        schemaVersion 1
//        targetGenDir 'src/main/java'
//    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // 解决butterknife和lombok的冲突：Duplicate files copied in APK META-INF/services/javax.annotation.processing.Processor
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {

        abortOnError false

    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    implementation 'com.jakewharton:butterknife:7.0.1'
    implementation "com.android.support:design:$rootProject.v4Version"
    implementation "com.android.support:appcompat-v7:$rootProject.v4Version"
    implementation "com.android.support:cardview-v7:$rootProject.v4Version"
    implementation 'com.android.support:support-dynamic-animation:25.4.0'
    implementation 'org.apache.httpcomponents:httpcore:4.4.2'
    implementation files('libs/ksoap2-android-assembly-3.0.0-RC.4-jar-with-dependencies.jar')
    implementation 'io.reactivex:rxandroid:1.2.0'
    implementation 'io.reactivex:rxjava:1.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    implementation 'com.squareup.okhttp3:okhttp:3.1.2'
    implementation 'com.github.zhaokaiqiang.klog:library:1.3.0'
    implementation 'com.lijunguan:imageseletor:1.0.1'
    implementation('org.apache.commons:commons-io:1.3.2') {
        exclude module: 'commons-io'
    }
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation files('libs/android-custom-vg.2.6.0.jar')
    implementation 'com.github.thinkcool:circletextimageview:1.0.20151218'
    //看这个库有用没
    implementation 'com.astuetz:pagerslidingtabstrip:1.0.1'
    implementation 'q.rorbin:badgeview:1.1.2'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'de.greenrobot:eventbus:2.4.0'
    implementation 'org.apmem.tools:layouts:1.9@aar'
    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    //闪光的字
    implementation 'com.romainpiel.shimmer:library:1.4.0@aar'
    //跳动的
    implementation 'net.frakbot:jumpingbeans:1.3.0'
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.1.11'
    implementation 'com.flyco.roundview:FlycoRoundView_Lib:1.1.4@aar'
    //个扩展原生控件支持圆角矩形框背景的库,可以减少相关shape资源文件使用
    implementation 'zhou.widget:richtext:1.0.4'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-5'
    //支持mutidex
    implementation 'com.android.support:multidex:1.0.1'
    //信鸽jar
    implementation 'com.tencent.xinge:xinge:3.2.3-release'
    //wup包
    implementation 'com.tencent.wup:wup:1.0.0.E-release'
    //mid包
    implementation 'com.tencent.mid:mid:4.0.6-release'
    def AAVersion = '4.3.1'
    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"
    implementation "org.androidannotations:androidannotations-api:$AAVersion"
    //    annotationProcessor
//    implementation 'com.zijunlin.Zxing.Demo:ZXingDemo:1.0.3'
//    //产品标签
//    implementation 'me.gujun.android.taggroup:library:1.4@aar'
    // popdialogwindow
    implementation 'com.github.pinguo-zhouwei:CustomPopwindow:2.1.1'
    //处理19状态栏
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    //内存泄漏
    //    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3'
    //    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
  implementation project(':ZXingapp')
    //数据库
    //数据库依赖
    implementation 'org.greenrobot:greendao:3.2.2'
    //rxjava生命周期
    implementation 'com.trello:rxlifecycle:1.0'
    implementation 'com.trello:rxlifecycle-components:1.0'
    //
    implementation 'com.facebook.stetho:stetho:1.5.0'

    //动态权限
    //动态权限处理
    implementation("com.github.hotchemi:permissionsdispatcher:3.1.0") {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:3.1.0"

}


public class BuildTimeListener implements TaskExecutionListener, BuildListener {
    private Clock clock
    private times = []

    @Override
    void beforeExecute(Task task) {
        clock = new org.gradle.util.Clock()
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.timeInMs
        times.add([ms, task.path])

        //task.project.logger.warn "${task.path} spend ${ms}ms"
    }

    @Override
    void buildStarted(Gradle gradle) {

    }

    @Override
    void settingsEvaluated(Settings settings) {

    }

    @Override
    void projectsLoaded(Gradle gradle) {

    }

    @Override
    void projectsEvaluated(Gradle gradle) {

    }

    @Override
    void buildFinished(BuildResult result) {
        println "Task spend time:"
        for (time in times) {
            if (time[0] >= 50) {
                printf "%7sms  %s\n", time
            }
        }
    }

}

project.gradle.addListener(new BuildTimeListener())